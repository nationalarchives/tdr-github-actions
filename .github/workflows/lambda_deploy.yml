name: TDR Deploy to ECS
on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      lambda-name:
        required: true
        type: string
      deployment-package:
        required: true
        type: string
      to-deploy:
        required: true
        type: string
    secrets:
      ACCOUNT_NUMBER:
        required: true
      MANAGEMENT_ACCOUNT:
        required: true
      WORKFLOW_PAT:
        required: true
      SLACK_WEBHOOK:
        required: true
permissions:
  id-token: write
  contents: write
jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - id: role-name
        run: print(f"::set-output name=role-name::TDRGithubActionsDeployLambda{'${{ inputs.environment }}'.title()}")
        shell: python
      - name: Configure AWS credentials for Lambda
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ secrets.ACCOUNT_NUMBER }}:role/${{ steps.role-name.outputs.role-name }}
          aws-region: eu-west-2
          role-session-name: ECRLogin
      - name: Deploy to lambda
        run: |
              aws lambda update-function-code --function-name tdr-${{ inputs.lambda-name }}-${{ inputs.environment }} --s3-bucket tdr-backend-code-mgmt --s3-key ${{ inputs.to-deploy }}/${{ inputs.deployment-package }}
              aws lambda function-updated --function-name tdr-${{ inputs.lambda-name }}-${{ inputs.environment }}
      - name: Send success message
        uses: nationalarchives/tdr-github-actions/.github/actions/slack-send@main
        with:
          message: ":white_check_mark: Service ${{ inputs.lambda-name }} updated to version ${{ inputs.to-deploy }} in ${{ inputs.environment }}"
          slack-url: ${{ secrets.SLACK_WEBHOOK }}
      - name: Update release branch
        run: |
          git branch -f release-${{ inputs.environment }} HEAD
          git push -f origin release-${{ inputs.environment }}
      - name: Send failure message
        uses: nationalarchives/tdr-github-actions/.github/actions/slack-send@main
        if: failure()
        with:
          message: ":warning: Build failed for ${{ inputs.lambda-name }}"
          slack-url: ${{ secrets.SLACK_WEBHOOK }}
      - name: Run E2E tests
        if: inputs.environment != 'prod'
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/nationalarchives/tdr-e2e-tests/actions/workflows/ci.yml/dispatches
          ref: master
          inputs: "{\"environment\": \"${{ inputs.environment }}\"}"
        env:
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_PAT }}
