name: TDR ECS Build Images
on:
  workflow_call:
    inputs:
      repo-name:
        required: true
        type: string
      build-command:
        required: false
        type: string
      image-name:
        required: true
        type: string
    secrets:
      MANAGEMENT_ACCOUNT:
        required: true
      WORKFLOW_PAT:
        required: true
    outputs:
      next-version:
        description: "The next version of the project"
        value: ${{ jobs.pre-deploy.outputs.next-version }}

permissions:
  id-token: write
  contents: write
jobs:
  pre-deploy:
    runs-on: ubuntu-latest
    outputs:
      next-version: ${{ steps.next-tag.outputs.next-version }}
    steps:
      - uses: actions/checkout@v3
      - uses: coursier/cache-action@v6
      - name: Configure AWS credentials from management account
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: arn:aws:iam::${{ secrets.MANAGEMENT_ACCOUNT }}:role/TDRGithubActionsRoleMgmt
          aws-region: eu-west-2
          role-session-name: APIDownloadDependencies
      - name: Login to ECR
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.MANAGEMENT_ACCOUNT }}.dkr.ecr.eu-west-2.amazonaws.com
      - run: pip install requests
      - id: next-tag
        uses: nationalarchives/tdr-github-actions/.github/actions/get-next-version@main
        with:
          repo-name: ${{ inputs.repo-name }}
      - name: Build new image version
        env:
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_PAT }}
        run: |
          if [ "${{ inputs.build-command }}" != '' ]; then
            ${{ inputs.build-command }}
          fi
          docker build -t ${{ secrets.MANAGEMENT_ACCOUNT }}.dkr.ecr.eu-west-2.amazonaws.com/${{ inputs.image-name }}:${{ steps.next-tag.outputs.next-version }} .
          docker push ${{ secrets.MANAGEMENT_ACCOUNT }}.dkr.ecr.eu-west-2.amazonaws.com/${{ inputs.image-name }}:${{ steps.next-tag.outputs.next-version }}
          git tag ${{ steps.next-tag.outputs.next-version }}
          git push origin ${{ steps.next-tag.outputs.next-version }}
